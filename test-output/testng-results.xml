<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="3" ignored="0" total="12" passed="8" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-03-23T11:00:47 IST" name="Suite" finished-at="2022-03-23T11:04:02 IST" duration-ms="194332">
    <groups>
    </groups>
    <test started-at="2022-03-23T11:00:47 IST" name="Test" finished-at="2022-03-23T11:04:02 IST" duration-ms="194332">
      <class name="com.flipkart.test.AccountsPageTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.flipkart.test.AccountsPageTest@1d483de4]" started-at="2022-03-23T11:02:02 IST" name="setUp" finished-at="2022-03-23T11:02:13 IST" duration-ms="11424" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyHomePageTitle()[pri:1, instance:com.flipkart.test.AccountsPageTest@1d483de4]" started-at="2022-03-23T11:02:13 IST" name="verifyHomePageTitle" finished-at="2022-03-23T11:02:13 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHomePageTitle -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.flipkart.test.AccountsPageTest@1d483de4]" started-at="2022-03-23T11:02:13 IST" name="tearDown" finished-at="2022-03-23T11:02:14 IST" duration-ms="818" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.flipkart.test.AccountsPageTest@1d483de4]" started-at="2022-03-23T11:02:14 IST" name="setUp" finished-at="2022-03-23T11:02:23 IST" duration-ms="9117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTabItemsInAccountsPage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.flipkart.test.AccountsPageTest@1d483de4]" started-at="2022-03-23T11:02:23 IST" name="verifyTabItemsInAccountsPage" data-provider="getAccountsTestData" finished-at="2022-03-23T11:02:23 IST" duration-ms="168" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Order history and details]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[My credit slips]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[My addresses]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[My personal information]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[My wishlists]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTabItemsInAccountsPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.flipkart.test.AccountsPageTest@1d483de4]" started-at="2022-03-23T11:02:23 IST" name="tearDown" finished-at="2022-03-23T11:02:24 IST" duration-ms="824" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.flipkart.test.AccountsPageTest -->
      <class name="com.flipkart.test.OrderDetailsPageTest">
        <test-method is-config="true" signature="initialize()[pri:0, instance:com.flipkart.test.OrderDetailsPageTest@3b74ac8]" started-at="2022-03-23T11:03:22 IST" name="initialize" finished-at="2022-03-23T11:04:01 IST" duration-ms="38652" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="VerifyOrderDetailsPage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.flipkart.test.OrderDetailsPageTest@3b74ac8]" started-at="2022-03-23T11:04:01 IST" name="VerifyOrderDetailsPage" data-provider="getOrderDetails" finished-at="2022-03-23T11:04:01 IST" duration-ms="231" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Faded Short Sleeve T-shirts]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[$16.51]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[rgb(57, 155, 73)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[In stock]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyOrderDetailsPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.flipkart.test.OrderDetailsPageTest@3b74ac8]" started-at="2022-03-23T11:04:01 IST" name="tearDown" finished-at="2022-03-23T11:04:02 IST" duration-ms="790" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.flipkart.test.OrderDetailsPageTest -->
      <class name="com.flipkart.test.WomenProductPageTest">
        <test-method is-config="true" signature="init()[pri:0, instance:com.flipkart.test.WomenProductPageTest@4032d386]" started-at="2022-03-23T11:02:24 IST" name="init" finished-at="2022-03-23T11:02:36 IST" duration-ms="12359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="verifyProductDetailsPage(java.lang.String,java.lang.String)[pri:1, instance:com.flipkart.test.WomenProductPageTest@4032d386]" started-at="2022-03-23T11:02:36 IST" name="verifyProductDetailsPage" data-provider="getProduceDetails" finished-at="2022-03-23T11:02:47 IST" duration-ms="10311" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Faded Short Sleeve T-shirts]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[$16.51]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyProductDetailsPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.flipkart.test.WomenProductPageTest@4032d386]" started-at="2022-03-23T11:02:47 IST" name="tearDown" finished-at="2022-03-23T11:02:48 IST" duration-ms="794" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.flipkart.test.WomenProductPageTest -->
      <class name="com.flipkart.test.LoginPageTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.flipkart.test.LoginPageTest@79c97cb]" started-at="2022-03-23T11:00:48 IST" name="setUp" finished-at="2022-03-23T11:00:56 IST" duration-ms="8358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginPageTitleTest()[pri:1, instance:com.flipkart.test.LoginPageTest@79c97cb]" started-at="2022-03-23T11:00:56 IST" name="loginPageTitleTest" finished-at="2022-03-23T11:00:56 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPageTitleTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.flipkart.test.LoginPageTest@79c97cb]" started-at="2022-03-23T11:00:56 IST" name="tearDown" finished-at="2022-03-23T11:00:57 IST" duration-ms="776" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.flipkart.test.LoginPageTest@79c97cb]" started-at="2022-03-23T11:00:57 IST" name="setUp" finished-at="2022-03-23T11:01:04 IST" duration-ms="7673" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="logoValidationTest()[pri:2, instance:com.flipkart.test.LoginPageTest@79c97cb]" started-at="2022-03-23T11:01:04 IST" name="logoValidationTest" finished-at="2022-03-23T11:01:04 IST" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoValidationTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.flipkart.test.LoginPageTest@79c97cb]" started-at="2022-03-23T11:01:04 IST" name="tearDown" finished-at="2022-03-23T11:01:05 IST" duration-ms="750" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.flipkart.test.LoginPageTest@79c97cb]" started-at="2022-03-23T11:01:06 IST" name="setUp" finished-at="2022-03-23T11:01:13 IST" duration-ms="7274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginTest(java.lang.String,java.lang.String)[pri:3, instance:com.flipkart.test.LoginPageTest@79c97cb]" started-at="2022-03-23T11:01:13 IST" name="loginTest" data-provider="getLoginTestData" finished-at="2022-03-23T11:01:15 IST" duration-ms="2304" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dineshrenganathan@solutionchamps.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Welcome123$]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.flipkart.test.LoginPageTest@79c97cb]" started-at="2022-03-23T11:01:15 IST" name="tearDown" finished-at="2022-03-23T11:01:16 IST" duration-ms="787" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.flipkart.test.LoginPageTest@79c97cb]" started-at="2022-03-23T11:01:16 IST" name="setUp" finished-at="2022-03-23T11:01:24 IST" duration-ms="7614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="loginTest(java.lang.String,java.lang.String)[pri:3, instance:com.flipkart.test.LoginPageTest@79c97cb]" started-at="2022-03-23T11:01:24 IST" name="loginTest" data-provider="getLoginTestData" finished-at="2022-03-23T11:01:27 IST" duration-ms="3088" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[arun@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abcd123$]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [My account - My Store] but found [Login - My Store]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [My account - My Store] but found [Login - My Store]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.flipkart.test.LoginPageTest.loginTest(LoginPageTest.java:86)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.flipkart.test.LoginPageTest@79c97cb]" started-at="2022-03-23T11:01:27 IST" name="tearDown" finished-at="2022-03-23T11:01:28 IST" duration-ms="768" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.flipkart.test.LoginPageTest@79c97cb]" started-at="2022-03-23T11:01:28 IST" name="setUp" finished-at="2022-03-23T11:01:35 IST" duration-ms="7361" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="loginTest(java.lang.String,java.lang.String)[pri:3, instance:com.flipkart.test.LoginPageTest@79c97cb]" started-at="2022-03-23T11:01:35 IST" name="loginTest" data-provider="getLoginTestData" finished-at="2022-03-23T11:01:37 IST" duration-ms="1676" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[arun@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abcd123$]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [My account - My Store] but found [Login - My Store]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [My account - My Store] but found [Login - My Store]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.flipkart.test.LoginPageTest.loginTest(LoginPageTest.java:86)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.flipkart.test.LoginPageTest@79c97cb]" started-at="2022-03-23T11:01:37 IST" name="tearDown" finished-at="2022-03-23T11:01:38 IST" duration-ms="774" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.flipkart.test.LoginPageTest@79c97cb]" started-at="2022-03-23T11:01:38 IST" name="setUp" finished-at="2022-03-23T11:01:45 IST" duration-ms="7401" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="loginTest(java.lang.String,java.lang.String)[pri:3, instance:com.flipkart.test.LoginPageTest@79c97cb]" started-at="2022-03-23T11:01:45 IST" name="loginTest" data-provider="getLoginTestData" finished-at="2022-03-23T11:01:51 IST" duration-ms="5751" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[arun@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abcd123$]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [My account - My Store] but found [Login - My Store]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [My account - My Store] but found [Login - My Store]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.flipkart.test.LoginPageTest.loginTest(LoginPageTest.java:86)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.flipkart.test.LoginPageTest@79c97cb]" started-at="2022-03-23T11:01:51 IST" name="tearDown" finished-at="2022-03-23T11:01:52 IST" duration-ms="807" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.flipkart.test.LoginPageTest@79c97cb]" started-at="2022-03-23T11:01:52 IST" name="setUp" finished-at="2022-03-23T11:01:59 IST" duration-ms="7549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginTest(java.lang.String,java.lang.String)[pri:3, instance:com.flipkart.test.LoginPageTest@79c97cb]" started-at="2022-03-23T11:01:59 IST" name="loginTest" data-provider="getLoginTestData" finished-at="2022-03-23T11:02:01 IST" duration-ms="1690" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[arun@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abcd123$]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [My account - My Store] but found [Login - My Store]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [My account - My Store] but found [Login - My Store]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.flipkart.test.LoginPageTest.loginTest(LoginPageTest.java:86)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.flipkart.test.LoginPageTest@79c97cb]" started-at="2022-03-23T11:02:01 IST" name="tearDown" finished-at="2022-03-23T11:02:02 IST" duration-ms="757" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.flipkart.test.LoginPageTest -->
      <class name="com.flipkart.test.ShoppingCartPageTest">
        <test-method is-config="true" signature="initialize()[pri:0, instance:com.flipkart.test.ShoppingCartPageTest@28d18df5]" started-at="2022-03-23T11:02:48 IST" name="initialize" finished-at="2022-03-23T11:03:01 IST" duration-ms="13394" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyShoppingCartPage(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.flipkart.test.ShoppingCartPageTest@28d18df5]" started-at="2022-03-23T11:03:01 IST" name="verifyShoppingCartPage" data-provider="getShoppingCartDetails" finished-at="2022-03-23T11:03:21 IST" duration-ms="20411" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Faded Short Sleeve T-shirts]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[$16.51]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Product successfully added to your shopping cart]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyShoppingCartPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.flipkart.test.ShoppingCartPageTest@28d18df5]" started-at="2022-03-23T11:03:21 IST" name="tearDown" finished-at="2022-03-23T11:03:22 IST" duration-ms="777" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.flipkart.test.ShoppingCartPageTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
